import { ethers } from "hardhat";

async function main(swiftAddr: string) {
	const Swift = await ethers.getContractFactory("MayanSwift");
	console.log({ swiftAddr })
	const swift = await Swift.attach(swiftAddr);

	// const ERC20_ABI = [
	// 	"function approve(address spender, uint256 value) public returns (bool)"
	//   ];
	// const busd = "0xe9e7cea3dedca5984780bafc599bd69add087d56";
	// const [owner] = await ethers.getSigners();
	// const token = new ethers.Contract(busd, ERC20_ABI, owner);
	// const approveTx = await token.approve(swift.address, "30000000000000000");
	// await approveTx.wait();

	const vaa = "0x01000000030d00061ffe2c34973b3127392f529519c00c240edcc78f2e8d860628b161fab387866f9b053353a019d40399ee60412a2e3d784b133a30bee99d246f3eab4e1f61ee01014054d0cfdc0d1ce6273158d1538ff1dc227f620ebf895958f0d98c4a0ae3c3655a86cd60b9f2cfa0e1a299084b273303a2166027d00526b9362aa1739c06956a00029ee7ae8289c1170006db45ee61a46ebeadb4807f53656ff7e4b4af1bcc897ae635c4cd04c6f261baa172a3bf5f5db48af08b5d21e38ec689001feb38572bf57e0004fa7060b16a017fed0cb5e26fa35d1ceef648cf147720a84050c515132ca49cd10050aad44bea3115b2021d6170ee5af2c601f21a614e7464075ae7bedc7015740106a62975fff8b6009a35f32c27a566b3210410ea9ec4770f163ed0bca537da52ce319f59577d0a96b1a363fd2383f0b6b31d3f8b8b2a135df6515df5be937f800a00083921d0a8a963f2f77833fd2e06c777f38e147ec7dc58f5dee93f478edec58add017f4dd7c9091ac2a3074ae3d1b61fac6b40333b31b6b87ea5705703004af61f01094d346f79545f11edc4b2b5288a61e4e21c33de58f580a919427be86811b83c133d8b1da659d3b5cfa98a146c804c0c4e12ad27454703572e644116b9323ef3d2010a9046aa30b3b36b558954757187efa650c8b7867d63724acd8a680e07cb69e1c203822a2e9c4bf0b39b1ca329369597d720d1822c091c812c558c85f037e82656000b39fda481f1ea87e488e7ab5a3b80317d82218e430eb505f43fbd4d4ae72268d06440cd576c35e6f6fc21ffe5d3c6553cae557a242e17d1c0e002243ae9e98a7e000ccfba8945c8ccc1eeaa5c7f1a94d1541e57d62ce1f4a3dba9f98d6a980bfd3bdf1bc0e555997c3fb300ce3a99b3a83a5f504011f91b8a492e5204203ea1d9bdae000d26cabba151453d822d7a3f3a8e24f93867a285536a416671c52dc442b993548c28bfe4225342c2409e2d233f18b49b4fe57a5b8aa86be53fd98d582ebd61f3a90011c67466fe376394fe7b4ddd7897bc069e8fc71777d81b714752a62e49a68720c1138cad9418f139e716e8f3fd45f9eea556c4772a95fc6659423609b9da6c660900129a38f3aeece7dd0eb192b02af62be604eb6219bf5a6cb1ba41adfc48f45d08ab65e6ed16bab7e84b4ac4cc0edd29ade53bce9858ebb90b654398e8866717ced80065186dcf00000001000109e0aaee6e67322c1aef6d40af84c78278da8cfd0ca27fbdb4078cd3d02cd79b000000000000000e2001f62bf45c2aaa81a55e57fb34789e25d25e98cf4b89da11e806c4bc61dd8d95e30004000000000000000000000000ee1a58eafe1977a3d2ae59e2897bb815054f6d580000000000000000000000005acf4e865604ab620fb84acc047b990f2d2856fd0000000000000000000000000000000000000000000000000000000000000000000000000000017400000000000000000000000000000000000000004782be6d8e2bd918c7185291e9753e265272f79d0a0a0005000000000000000000000000000000000000000000000000000000000000000000000000000000d0";

	const tx = await swift.fulfillOrder(vaa, addressToBytes32("0x5Acf4E865604AB620Fb84ACc047B990F2D2856FD"), { value: "3720000000000" });
	const receipt = await tx.wait();
	console.log({ receipt });
}

function addressToBytes32(address: string) {
	// Ensure the address starts with '0x'
	if (!/^0x[0-9a-fA-F]{40}$/.test(address)) {
		throw new Error('Invalid Ethereum address');
	}

	// Remove the '0x' prefix and pad it with 24 zeroes to get bytes32
	return '0x' + '000000000000000000000000' + address.substring(2);
}

main(process.env.SWIFT_ADDR).catch((error) => {
	console.error(error);
	process.exitCode = 1;
});